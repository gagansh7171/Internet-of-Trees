[{"/home/gagan/Documents/iot/iot_frontend/src/index.js":"1","/home/gagan/Documents/iot/iot_frontend/src/App.js":"2","/home/gagan/Documents/iot/iot_frontend/src/redux/store.js":"3","/home/gagan/Documents/iot/iot_frontend/src/components/Header.js":"4","/home/gagan/Documents/iot/iot_frontend/src/theme.js":"5","/home/gagan/Documents/iot/iot_frontend/src/navigation/RouterConfig.js":"6","/home/gagan/Documents/iot/iot_frontend/src/navigation/NotFound.js":"7","/home/gagan/Documents/iot/iot_frontend/src/redux/reducers/index.js":"8","/home/gagan/Documents/iot/iot_frontend/src/pages/page.js":"9","/home/gagan/Documents/iot/iot_frontend/src/redux/reducers/appReducer.js":"10","/home/gagan/Documents/iot/iot_frontend/src/pages/treecard.js":"11","/home/gagan/Documents/iot/iot_frontend/src/constant.js":"12","/home/gagan/Documents/iot/iot_frontend/src/redux/constants.js":"13"},{"size":271,"mtime":1678336375891,"results":"14","hashOfConfig":"15"},{"size":1259,"mtime":1678357140362,"results":"16","hashOfConfig":"15"},{"size":538,"mtime":1678336459200,"results":"17","hashOfConfig":"15"},{"size":7933,"mtime":1678363407017,"results":"18","hashOfConfig":"15"},{"size":559,"mtime":1678351355319,"results":"19","hashOfConfig":"15"},{"size":841,"mtime":1678360719709,"results":"20","hashOfConfig":"15"},{"size":1993,"mtime":1678338205107,"results":"21","hashOfConfig":"15"},{"size":159,"mtime":1678336567676,"results":"22","hashOfConfig":"15"},{"size":5707,"mtime":1678455542547,"results":"23","hashOfConfig":"15"},{"size":484,"mtime":1678336646373,"results":"24","hashOfConfig":"15"},{"size":5158,"mtime":1678450975044,"results":"25","hashOfConfig":"15"},{"size":103,"mtime":1678448691715,"results":"26","hashOfConfig":"15"},{"size":99,"mtime":1678336490945,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qladqs",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/gagan/Documents/iot/iot_frontend/src/index.js",[],["60","61"],"/home/gagan/Documents/iot/iot_frontend/src/App.js",["62"],"import React from \"react\";\r\n// ROUTER\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { RouterConfig } from \"./navigation/RouterConfig\";\r\n// MUI Theme\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport \"./App.css\";\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport {themes} from \"./theme\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Header from \"./components/Header\";\r\n\r\nimport createPalette from \"@material-ui/core/styles/createPalette\";\r\n\r\nconst setTheme = (theme) =>{\r\n  return createMuiTheme({\r\n    palette: createPalette(themes[theme]),\r\n  });\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  render(){\r\n    \r\n    return (\r\n      <div>\r\n        <ThemeProvider theme={setTheme(this.props.currentTheme)}>   \r\n          <CssBaseline/>\r\n          <HashRouter>\r\n            <Header/>\r\n            <Box mt={19}>\r\n              <RouterConfig />\r\n            </Box>\r\n          </HashRouter>\r\n        </ThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    currentTheme: state.app.theme || \"light\",\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);","/home/gagan/Documents/iot/iot_frontend/src/redux/store.js",[],"/home/gagan/Documents/iot/iot_frontend/src/components/Header.js",["63","64","65","66","67","68"],"import React from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = (theme) => ({\r\n    rightSpan : {\r\n        display : \"flex\",\r\n        flex : \"1 1 auto\"\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n          display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n})\r\n\r\nfunction ElevationScroll(props) {\r\n    const { children} = props;\r\n    const trigger = useScrollTrigger({\r\n      disableHysteresis: true,\r\n      threshold: 0,\r\n    });\r\n  \r\n    return React.cloneElement(children, {\r\n      elevation: trigger ? 4 : 0,\r\n    });\r\n  }\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { anchorEl : null, mobileMoreAnchorEl : null }\r\n        this.state.isMenuOpen = Boolean(this.state.anchorEl);\r\n        this.state.isMobileMenuOpen = Boolean(this.state.mobileMoreAnchorEl);\r\n    }\r\n    \r\n    handleProfileMenuOpen = (event) => {\r\n        this.setState({anchorEl : event.currentTarget});\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({mobileMoreAnchorEl : null});\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({anchorEl : null});\r\n        this.handleMobileMenuClose();\r\n    };\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({mobileMoreAnchorEl : event.currentTarget});\r\n    };\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <>\r\n                <ElevationScroll {...this.props}>\r\n                <AppBar position=\"fixed\" className=\"full-wide\">\r\n                <Toolbar>\r\n                    <Link to=\"/\">\r\n                        <span style={{\"display\":\"flex\", \"alignItems\":\"flex-end\"}}>\r\n                            <img src=\"./assets/images/logo.png\" width=\"80px\" style={{paddingTop: \"5px\"}}/>\r\n                            \r\n                            <span className={classes.sectionDesktop} style = {{\"fontFamily\":\"'Teko', sans-serif\", \"fontSize\":\"4em\"}} fontWeight={500}>\r\n                            &nbsp; IoTrees\r\n                            </span>\r\n                        </span>\r\n                    </Link>\r\n                    <span className={classes.rightSpan}></span>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <Link to=\"/\"><Button>\r\n                            <Box fontFamily=\"'Roboto', sans-serif\" m={2}>\r\n                                All\r\n                            </Box>\r\n                        </Button></Link>\r\n                        <Link to=\"/fire\"><Button>\r\n                            <Box fontFamily=\"'Roboto', sans-serif\" m={2}>\r\n                                Fire Threat\r\n                            </Box>\r\n                        </Button></Link>\r\n                        <Link to=\"/chop\"><Button>\r\n                            <Box fontFamily=\"'Roboto', sans-serif\" m={2}>\r\n                                Chop Threat\r\n                            </Box>\r\n                        </Button></Link>\r\n                        <Link to=\"/fall\"><Button>\r\n                            <Box fontFamily=\"'Roboto', sans-serif\" m={2}>\r\n                                Fall Threat\r\n                            </Box>\r\n                        </Button></Link>\r\n                        <Link to=\"/fallen\"><Button>\r\n                            <Box fontFamily=\"'Roboto', sans-serif\" m={2}>\r\n                                Fallen\r\n                            </Box>\r\n                        </Button></Link>\r\n                        <Button onClick={() =>{this.props.toggleTheme(this.props.currentTheme)}}>\r\n                            {this.props.currentTheme==\"light\"?<Brightness4Icon/>:<Brightness7Icon/>}\r\n                        </Button>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                            >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Button onClick={() =>{this.props.toggleTheme(this.props.currentTheme)}}>\r\n                            {this.props.currentTheme==\"light\"?<Brightness4Icon/>:<Brightness7Icon/>}\r\n                        </Button>\r\n                    </div>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileMoreAnchorEl}\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={this.state.mobileMoreAnchorEl}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <Link to=\"/\" onClick={this.handleMobileMenuClose}><MenuItem>\r\n                        \r\n                            <Box fontFamily=\"'Roboto', sans-serif\" m={2}>\r\n                                All\r\n                            </Box>\r\n                        </MenuItem></Link>\r\n                        <Link to=\"/fire\" onClick={this.handleMobileMenuClose}><MenuItem>\r\n                        \r\n                            <Box fontFamily=\"'Roboto', sans-serif\" m={2}>\r\n                                Fire Threat\r\n                            </Box>\r\n                        </MenuItem></Link>\r\n                        <Link to=\"/chop\" onClick={this.handleMobileMenuClose}><MenuItem>\r\n        \r\n                            <Box fontFamily=\"'Roboto', sans-serif\" m={2}>\r\n                                Chop Threat\r\n                            </Box>\r\n                        \r\n                        </MenuItem></Link>\r\n                        <Link to=\"/fall\" onClick={this.handleMobileMenuClose}><MenuItem>\r\n                        \r\n                            <Box fontFamily=\"'Roboto', sans-serif\" m={2}>\r\n                                Fall Threat\r\n                            </Box>\r\n                        \r\n                        </MenuItem></Link>\r\n                        <Link to=\"/fallen\" onClick={this.handleMobileMenuClose}><MenuItem>\r\n                        \r\n                            <Box fontFamily=\"'Roboto', sans-serif\" m={2}>\r\n                                Fallen\r\n                            </Box>\r\n                        \r\n                        </MenuItem></Link>\r\n                    </Menu>\r\n                </Toolbar>\r\n                </AppBar>\r\n                </ElevationScroll>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n  \r\nfunction mapStateToProps(state){\r\n    return {\r\n      currentTheme : state.app.theme || \"light\",\r\n    };\r\n  }\r\n\r\n  function mapDispatchToProps(dispatch){\r\n    return{\r\n      toggleTheme: (t) => {\r\n        let set;\r\n        if(t==\"light\"){ set=\"dark\";}\r\n        else if(t==\"dark\"){ set=\"light\";}\r\n        return dispatch({type:\"SET_THEME\", theme : set});}\r\n    };\r\n  }\r\n  export default withStyles(useStyles)(connect(mapStateToProps, mapDispatchToProps)(Header));","/home/gagan/Documents/iot/iot_frontend/src/theme.js",[],"/home/gagan/Documents/iot/iot_frontend/src/navigation/RouterConfig.js",[],"/home/gagan/Documents/iot/iot_frontend/src/navigation/NotFound.js",["69","70","71","72"],"import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (theme) => ({\r\n  error : {\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\"\r\n  },\r\n});\r\n\r\nclass NotFound extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  render(){\r\n    const { classes } = this.props;\r\n    return(\r\n      <Box className={classes.error} mt={5} mb={5}>\r\n        <img className=\"vert-move\" src={this.props.image} height={200} />\r\n        <br/><br/>\r\n        <Typography variant=\"h3\" ><Box fontFamily=\"Helvetica\" fontWeight={800}>FOUNDN'T!</Box></Typography>\r\n        <Typography align =\"center\">\r\n          <Box maxWidth={470} mt={2} fontFamily=\"Helvetica\" fontSize={17} fontWeight={500} >OOPS! Looks like the page you are looking for got lost in the stack. So either you need \r\n          a little typing lesson or I got some work to do. \r\n          Feel free to hit me @<a href=\"https://github.com/gagansh7171\" nostyle><strong>gagansh7171</strong></a>.</Box>\r\n        </Typography>\r\n      </Box>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    currentTheme : state.app.theme || \"light\",\r\n    image: ((theme) => {\r\n      switch (theme) {\r\n        case \"light\":\r\n          return \"./assets/images/search-stack-light.svg\";\r\n        case \"dark\":\r\n          return \"./assets/images/search-stack-dark.svg\";\r\n        default :\r\n          return \"./assets/images/search-stack-light.svg\";\r\n      }\r\n    })(state.app.theme),\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return{\r\n    toggleTheme: (t) => {\r\n      let set;\r\n      if(t==\"light\"){ set=\"dark\";}\r\n      else if(t==\"dark\"){ set=\"light\";}\r\n      return dispatch({type:\"SET_THEME\", theme : set});}\r\n  };\r\n}\r\nexport default withStyles(useStyles)(connect(mapStateToProps, mapDispatchToProps)(NotFound));","/home/gagan/Documents/iot/iot_frontend/src/redux/reducers/index.js",[],"/home/gagan/Documents/iot/iot_frontend/src/pages/page.js",["73","74","75"],"import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport TreeCard from \"./treecard\"\r\nimport axios from 'axios';\r\nimport { constants } from \"../constant\";\r\n\r\nconst useStyles = (theme) => (\r\n    {\r\n    trees:{\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        alignItems:\"center\",\r\n        paddingBottom : \"20px\",\r\n        marginBottom:\"14px\"\r\n    },\r\n    widthManage:{\r\n        maxWidth : \"100%\",\r\n    },\r\n    cardHead: {\r\n        backgroundColor : \"#d8dee8\",//\"#f9fafc\",\r\n        padding:\"10px\",\r\n        color : \"#1c2d41\",\r\n        fontWeight:600,\r\n        fontSize:\"24px\",\r\n        borderRadius : \"6px 6px 0px 0px\",\r\n        display:\"flex\",\r\n        alignItems : \"center\",\r\n        //border : \"1px solid black\"\r\n    },\r\n    cardBody: {\r\n        backgroundColor : \"white\",\r\n        padding:\"10px\",\r\n        color :\"#3c4858\",\r\n        borderRadius : \" 0px 0px 6px 6px\",\r\n        fontSize : \"16px\",\r\n        fontWeight : 400,\r\n        fontFamily : \"arial\",\r\n        minHeight : \"fit-content\",\r\n        marginTop : \"1px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        //border : \"1px solid black\"   \r\n    },\r\n    alignCenter :{\r\n        display:\"flex\",\r\n        justifyContent:\"center\"\r\n    },\r\n    role:{\r\n        backgroundColor : \"#d8dee8\",\r\n        color : \"#000000\",\r\n        fontSize : \"13.33px\",\r\n        paddingLeft:\"10px\",\r\n        paddingRight : \"10px\",\r\n        display:\"flex\"\r\n    },\r\n    rightSpan : {\r\n        display : \"flex\",\r\n        flex : \"1 1 auto\"\r\n    },\r\n    cardWidth:{\r\n        width : 350,\r\n        padding : \"5px\"\r\n    },\r\n})\r\n\r\n\r\nclass Page extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            ws : null,    \r\n            \"All Trees\":\"0\", \"Fire Threat\" : \"1\", \"Chop Threat\" : \"2\", \"Fall Threat\" : \"3\", \"Fallen\" : \"4\"\r\n        }\r\n    }\r\n    timeout = 250;\r\n    update = () => {\r\n        axios.get(constants.backend+'trees/').then(\r\n            response => {\r\n                this.setState({trees : response.data})\r\n        }).catch((error) => {\r\n            this.setState({which:'error',load:false})\r\n        });\r\n    }\r\n    check = () => {\r\n        const { ws } = this.state;\r\n        if (!ws || ws.readyState == WebSocket.CLOSED) this.connect(); //check if websocket instance is closed, if so call `connect` function.\r\n    };\r\n    connect = () => {\r\n        var ws = new WebSocket(\"ws://\"+constants.wsp+\"ws/tree/\");\r\n        let that = this; // cache the this\r\n        var connectInterval;\r\n\r\n        // websocket onopen event listener\r\n        ws.onopen = () => {\r\n            this.setState({ ws: ws });\r\n            that.timeout = 250;\r\n            clearTimeout(connectInterval); \r\n        };\r\n\r\n        ws.onmessage = evt => {\r\n            // listen to data sent from the websocket server\r\n            const message = JSON.parse(evt.data)\r\n            // console.log(this.state.trees, message.trees)\r\n            this.setState({\"trees\": message.trees})\r\n        };\r\n\r\n        // websocket onclose event listener\r\n        ws.onclose = e => {\r\n            that.timeout = that.timeout + that.timeout; //increment retry interval\r\n            connectInterval = setTimeout(this.check, Math.min(10000, that.timeout)); //call check function after timeout\r\n        };\r\n\r\n        // websocket onerror event listener\r\n        ws.onerror = err => {\r\n            console.error(\r\n                \"Socket encountered error: \",\r\n                err.message,\r\n                \"Closing socket\"\r\n            );\r\n            ws.close();\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.update();\r\n        this.connect();\r\n    }    \r\n    deleteTree = (id) => {\r\n        axios.delete(constants.backend+'trees/'+id).then( res => \r\n            {this.state.ws.send(\"event\");\r\n        });\r\n        // this.setState(prevState => {\r\n        //     return { trees : prevState.trees.filter( (val) => {\r\n        //       return val.id != id;\r\n        //     })};\r\n        //   });\r\n    }\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <>\r\n            <Box className={classes.trees} >\r\n                <Typography variant=\"h3\">\r\n                    <Box display=\"block\" fontFamily=\"'Lora', serif\" fontWeight={700} fontStyle=\"italic\" mb={2}>\r\n                        {this.props.title}\r\n                    </Box>\r\n                </Typography>\r\n                    <Grid container >\r\n                        <Grid item xs={1}></Grid>\r\n                        <Grid item xs={10}>\r\n                        <Grid className={classes.widthManage}  container spacing={2} >\r\n                            {this.state?.trees?.map(entry => \r\n                                (this.props.title==\"All Trees\"||this.state[this.props.title]==entry.state)&&<Grid key={entry.macid+entry.nick} item xs={12} md={6} lg={4} className={classes.alignCenter}>\r\n                                    <TreeCard ws={this.state.ws} deleteTree={this.deleteTree} {...entry}/>                 \r\n                                </Grid>)\r\n                            }\r\n                        </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={1}></Grid>\r\n                    </Grid>  \r\n                    \r\n            </Box>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n      currentTheme : state.app.theme || \"light\",\r\n    };\r\n}\r\n\r\nexport default withStyles(useStyles)(connect(mapStateToProps, null)(Page));","/home/gagan/Documents/iot/iot_frontend/src/redux/reducers/appReducer.js",[],"/home/gagan/Documents/iot/iot_frontend/src/pages/treecard.js",["76","77"],"import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { IconButton, Modal, Typography, Input, Box, Button } from \"@material-ui/core\";\r\nimport axios from 'axios'\r\nimport { constants } from \"../constant\";\r\n\r\nconst useStyles = (theme) => (\r\n{\r\n    cardWidth:{\r\n        width : 350,\r\n        padding : \"7px\",\r\n        borderRadius : \"4px\",\r\n        position : \"relative\",\r\n        minHeight : \"100px\",\r\n        paddingBottom:\"50px\",\r\n        // height: \"fit-content\",\r\n    },\r\n    cardHead:{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    normal:{\r\n        backgroundColor: \"#43a047\",\r\n        color: \"white\"\r\n    },\r\n    danger:{\r\n        backgroundColor : \"#e53935\",\r\n        color: \"white\"\r\n    },\r\n    fallen:{\r\n        backgroundColor: \"#546e7a\",\r\n        color: \"white\"\r\n    },\r\n    nick:{\r\n        fontWeight : 500,\r\n        fontSize : \"large\",\r\n        width: \"80%\",\r\n        overflowWrap : \"break-word\",\r\n    },\r\n    buttonStyle:{\r\n        padding : \"5px !important\",\r\n        color : \"white\",\r\n        height : \"fit-content\",\r\n    },\r\n    desc:{\r\n        position: \"absolute\",\r\n        bottom : \"7px\"\r\n    },\r\n})\r\nconst modal = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\nclass TreeCard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { nicknameform:\"\", openModal : false, \r\n                        stateVal : {\"0\" : \"Normal\", \"1\" : \"Fire Threat\", \"2\" : \"Chop Threat\", \"3\" : \"Fall Threat\",\"4\": \"Fallen\"},\r\n                    ...props};\r\n        if(this.props.state == \"0\"){\r\n            this.state[\"bgcolor\"] =  \"normal\";\r\n        }else if(this.props.state == \"4\"){\r\n            this.state[\"bgcolor\"] = \"fallen\";\r\n        }else{\r\n            this.state[\"bgcolor\"] = \"danger\";\r\n        }\r\n    }\r\n\r\n    editNick = (e) => {\r\n        if(this.state.nicknameform.length > 0)\r\n        axios.put(constants.backend+'trees/'+this.props.id+\"/\", {\"nick\" : this.state.nicknameform})\r\n        .then(res => {\r\n            this.props.ws.send(\"event\");\r\n            this.setState(prevState => { return {openModal : false, nick : prevState.nicknameform, nicknameform: \"\"}});\r\n        });\r\n        this.setState({openModal : false});\r\n        \r\n    }\r\n    handleOpen = () => {\r\n        this.setState({openModal : true});\r\n    }\r\n    handleClose = () => {\r\n        this.setState({openModal : false});\r\n    }\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <>\r\n                \r\n                <Box className={[classes.cardWidth, (classes[this.state.bgcolor])].join(' ')}>\r\n                    <Box className={classes.cardHead}>\r\n                        <span className={classes.nick}>{this.state.nick}</span>\r\n                        <span className={classes.cardHead}>\r\n                            <IconButton className={classes.buttonStyle} onClick={this.handleOpen}><EditOutlinedIcon/></IconButton> \r\n                            <IconButton className={classes.buttonStyle} onClick={() => this.props.deleteTree(this.props.id)}><DeleteOutlineOutlinedIcon/></IconButton>\r\n                            <Modal open={this.state.openModal} onClose={this.handleClose}>\r\n                                <Box sx={modal}>\r\n                                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                                    Set new nick-name for this tree\r\n                                </Typography>\r\n                                <Input \r\n                                    placeholder=\"New Nick Name\" \r\n                                    onChange={(e) => this.setState({nicknameform : e.target.value})} \r\n                                    value={this.state.nicknameform} name=\"nick-name\" \r\n                                    inputProps={{ maxLength: 25 }} \r\n                                    style={{marginLeft:\"10px\", marginTop:\"3px\", width:\"32ch\", marginBottom: \"10px\"}}/>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={this.editNick}>\r\n                                    Submit\r\n                                </Button>\r\n                                </Box>\r\n                            </Modal>\r\n                        </span>\r\n                    </Box>         \r\n                    <Box className={classes.desc}>\r\n                        {this.state.macid}<br/>\r\n                        {this.state.stateVal[this.state.state]}\r\n                    </Box>\r\n                </Box>                 \r\n                           \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n      currentTheme : state.app.theme || \"light\",\r\n    };\r\n}\r\n\r\nexport default withStyles(useStyles)(connect(mapStateToProps, null)(TreeCard));","/home/gagan/Documents/iot/iot_frontend/src/constant.js",[],"/home/gagan/Documents/iot/iot_frontend/src/redux/constants.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":24,"column":3,"nodeType":"84","messageId":"85","endLine":26,"endColumn":4},{"ruleId":"86","severity":1,"message":"87","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":82,"column":29,"nodeType":"92","endLine":82,"endColumn":107},{"ruleId":"93","severity":1,"message":"94","line":117,"column":53,"nodeType":"95","messageId":"96","endLine":117,"endColumn":55},{"ruleId":"93","severity":1,"message":"94","line":130,"column":53,"nodeType":"95","messageId":"96","endLine":130,"endColumn":55},{"ruleId":"93","severity":1,"message":"94","line":193,"column":13,"nodeType":"95","messageId":"96","endLine":193,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":194,"column":18,"nodeType":"95","messageId":"96","endLine":194,"endColumn":20},{"ruleId":"82","severity":1,"message":"83","line":16,"column":3,"nodeType":"84","messageId":"85","endLine":18,"endColumn":4},{"ruleId":"90","severity":1,"message":"91","line":23,"column":9,"nodeType":"92","endLine":23,"endColumn":74},{"ruleId":"93","severity":1,"message":"94","line":58,"column":11,"nodeType":"95","messageId":"96","endLine":58,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":59,"column":16,"nodeType":"95","messageId":"96","endLine":59,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":90,"column":34,"nodeType":"95","messageId":"96","endLine":90,"endColumn":36},{"ruleId":"93","severity":1,"message":"94","line":156,"column":50,"nodeType":"95","messageId":"96","endLine":156,"endColumn":52},{"ruleId":"93","severity":1,"message":"94","line":156,"column":93,"nodeType":"95","messageId":"96","endLine":156,"endColumn":95},{"ruleId":"93","severity":1,"message":"94","line":71,"column":29,"nodeType":"95","messageId":"96","endLine":71,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":73,"column":35,"nodeType":"95","messageId":"96","endLine":73,"endColumn":37},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]